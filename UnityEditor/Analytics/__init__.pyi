import typing, abc
from System import MulticastDelegate, IAsyncResult, AsyncCallback
from System.Reflection import MethodInfo

class AnalyticsSettings(abc.ABC):
    @classmethod
    @property
    def configUrl(cls) -> str: ...
    @classmethod
    @configUrl.setter
    def configUrl(cls, value: str) -> str: ...
    @classmethod
    @property
    def dashboardUrl(cls) -> str: ...
    @classmethod
    @dashboardUrl.setter
    def dashboardUrl(cls, value: str) -> str: ...
    @classmethod
    @property
    def deviceStatsEnabledInBuild(cls) -> bool: ...
    @classmethod
    @property
    def enabled(cls) -> bool: ...
    @classmethod
    @enabled.setter
    def enabled(cls, value: bool) -> bool: ...
    @classmethod
    @property
    def eventUrl(cls) -> str: ...
    @classmethod
    @eventUrl.setter
    def eventUrl(cls, value: str) -> str: ...
    @classmethod
    @property
    def initializeOnStartup(cls) -> bool: ...
    @classmethod
    @initializeOnStartup.setter
    def initializeOnStartup(cls, value: bool) -> bool: ...
    @classmethod
    @property
    def packageRequiringCoreStatsPresent(cls) -> bool: ...
    @classmethod
    @packageRequiringCoreStatsPresent.setter
    def packageRequiringCoreStatsPresent(cls, value: bool) -> bool: ...
    @classmethod
    @property
    def testMode(cls) -> bool: ...
    @classmethod
    @testMode.setter
    def testMode(cls, value: bool) -> bool: ...

    class RequireInBuildDelegate(MulticastDelegate):
        def __init__(self, object: typing.Any, method: int) -> None: ...
        @property
        def Method(self) -> MethodInfo: ...
        @property
        def Target(self) -> typing.Any: ...
        def BeginInvoke(self, callback: AsyncCallback, object: typing.Any) -> IAsyncResult: ...
        def EndInvoke(self, result: IAsyncResult) -> bool: ...
        def Invoke(self) -> bool: ...



class PerformanceReportingSettings(abc.ABC):
    @classmethod
    @property
    def enabled(cls) -> bool: ...
    @classmethod
    @enabled.setter
    def enabled(cls, value: bool) -> bool: ...

