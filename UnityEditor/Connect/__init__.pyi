import typing, abc
from System import IDisposable, Action_1, Exception
from UnityEngine.UIElements import VisualElement

class CoppaDrawer(IDisposable, IProjectEditorDrawer):
    def __init__(self) -> None: ...
    def Dispose(self) -> None: ...
    def GetVisualElement(self) -> VisualElement: ...


class IProjectEditorDrawer(typing.Protocol):
    @abc.abstractmethod
    def GetVisualElement(self) -> VisualElement: ...


class ProjectBindDrawer(IDisposable, IProjectEditorDrawer):
    def __init__(self) -> None: ...
    def Dispose(self) -> None: ...
    def GetVisualElement(self) -> VisualElement: ...


class UnityOAuth(abc.ABC):
    @staticmethod
    def GetAuthorizationCodeAsync(clientId: str, callback: Action_1[UnityOAuth.AuthCodeResponse]) -> None: ...

    class AuthCodeResponse:
        @property
        def AuthCode(self) -> str: ...
        @AuthCode.setter
        def AuthCode(self, value: str) -> str: ...
        @property
        def Exception(self) -> Exception: ...
        @Exception.setter
        def Exception(self, value: Exception) -> Exception: ...


