import typing, clr
from System import MulticastDelegate, IAsyncResult, AsyncCallback
from System.Reflection import MethodInfo

class PlayerDataFileLocator:
    def __init__(self) -> None: ...
    @staticmethod
    def Register(locator: PlayerDataFileLocator.Locator) -> None: ...

    class Locator(MulticastDelegate):
        def __init__(self, object: typing.Any, method: int) -> None: ...
        @property
        def Method(self) -> MethodInfo: ...
        @property
        def Target(self) -> typing.Any: ...
        def BeginInvoke(self, path: clr.Reference[str], callback: AsyncCallback, object: typing.Any) -> IAsyncResult: ...
        def EndInvoke(self, path: clr.Reference[str], result: IAsyncResult) -> bool: ...
        def Invoke(self, path: clr.Reference[str]) -> bool: ...


