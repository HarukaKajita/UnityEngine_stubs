import typing, abc
from System import MulticastDelegate, IAsyncResult, AsyncCallback
from System.Reflection import MethodInfo

class ReplayKit(abc.ABC):
    @classmethod
    @property
    def APIAvailable(cls) -> bool: ...
    @classmethod
    @property
    def broadcastingAPIAvailable(cls) -> bool: ...
    @classmethod
    @property
    def broadcastURL(cls) -> str: ...
    @classmethod
    @property
    def cameraEnabled(cls) -> bool: ...
    @classmethod
    @cameraEnabled.setter
    def cameraEnabled(cls, value: bool) -> bool: ...
    @classmethod
    @property
    def isBroadcasting(cls) -> bool: ...
    @classmethod
    @property
    def isBroadcastingPaused(cls) -> bool: ...
    @classmethod
    @property
    def isPreviewControllerActive(cls) -> bool: ...
    @classmethod
    @property
    def isRecording(cls) -> bool: ...
    @classmethod
    @property
    def lastError(cls) -> str: ...
    @classmethod
    @property
    def microphoneEnabled(cls) -> bool: ...
    @classmethod
    @microphoneEnabled.setter
    def microphoneEnabled(cls, value: bool) -> bool: ...
    @classmethod
    @property
    def recordingAvailable(cls) -> bool: ...
    @staticmethod
    def Discard() -> bool: ...
    @staticmethod
    def HideCameraPreview() -> None: ...
    @staticmethod
    def PauseBroadcasting() -> None: ...
    @staticmethod
    def Preview() -> bool: ...
    @staticmethod
    def ResumeBroadcasting() -> None: ...
    @staticmethod
    def StopBroadcasting() -> None: ...
    @staticmethod
    def StopRecording() -> bool: ...
    # Skipped ShowCameraPreviewAt due to it being static, abstract and generic.

    ShowCameraPreviewAt : ShowCameraPreviewAt_MethodGroup
    class ShowCameraPreviewAt_MethodGroup:
        @typing.overload
        def __call__(self, posX: float, posY: float) -> bool:...
        @typing.overload
        def __call__(self, posX: float, posY: float, width: float, height: float) -> bool:...

    # Skipped StartBroadcasting due to it being static, abstract and generic.

    StartBroadcasting : StartBroadcasting_MethodGroup
    class StartBroadcasting_MethodGroup:
        @typing.overload
        def __call__(self, callback: ReplayKit.BroadcastStatusCallback) -> None:...
        @typing.overload
        def __call__(self, callback: ReplayKit.BroadcastStatusCallback, enableMicrophone: bool) -> None:...
        @typing.overload
        def __call__(self, callback: ReplayKit.BroadcastStatusCallback, enableMicrophone: bool, enableCamera: bool) -> None:...

    # Skipped StartRecording due to it being static, abstract and generic.

    StartRecording : StartRecording_MethodGroup
    class StartRecording_MethodGroup:
        @typing.overload
        def __call__(self) -> bool:...
        @typing.overload
        def __call__(self, enableMicrophone: bool) -> bool:...
        @typing.overload
        def __call__(self, enableMicrophone: bool, enableCamera: bool) -> bool:...


    class BroadcastStatusCallback(MulticastDelegate):
        def __init__(self, object: typing.Any, method: int) -> None: ...
        @property
        def Method(self) -> MethodInfo: ...
        @property
        def Target(self) -> typing.Any: ...
        def BeginInvoke(self, hasStarted: bool, errorMessage: str, callback: AsyncCallback, object: typing.Any) -> IAsyncResult: ...
        def EndInvoke(self, result: IAsyncResult) -> None: ...
        def Invoke(self, hasStarted: bool, errorMessage: str) -> None: ...


