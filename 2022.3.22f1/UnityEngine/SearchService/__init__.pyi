import typing
from System import Attribute, Array_1

class ObjectSelectorHandlerWithLabelsAttribute(Attribute):
    @typing.overload
    def __init__(self, labels: Array_1[str]) -> None: ...
    @typing.overload
    def __init__(self, matchAll: bool, labels: Array_1[str]) -> None: ...
    @property
    def labels(self) -> Array_1[str]: ...
    @property
    def matchAll(self) -> bool: ...
    @property
    def TypeId(self) -> typing.Any: ...


class ObjectSelectorHandlerWithTagsAttribute(Attribute):
    def __init__(self, tags: Array_1[str]) -> None: ...
    @property
    def tags(self) -> Array_1[str]: ...
    @property
    def TypeId(self) -> typing.Any: ...

