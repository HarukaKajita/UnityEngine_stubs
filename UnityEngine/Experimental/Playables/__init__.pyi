import abc
from System import IEquatable_1
from UnityEngine.Playables import IPlayable, PlayableGraph, PlayableHandle, PlayableBinding, IPlayableOutput, PlayableOutputHandle
from UnityEngine import Camera, Material, Object, RenderTexture

class CameraPlayable(IEquatable_1[CameraPlayable], IPlayable):
    @staticmethod
    def Create(graph: PlayableGraph, camera: Camera) -> CameraPlayable: ...
    def Equals(self, other: CameraPlayable) -> bool: ...
    def GetCamera(self) -> Camera: ...
    def GetHandle(self) -> PlayableHandle: ...
    # Operator not supported op_Explicit(playable: Playable)
    # Operator not supported op_Implicit(playable: CameraPlayable)
    def SetCamera(self, value: Camera) -> None: ...


class MaterialEffectPlayable(IEquatable_1[MaterialEffectPlayable], IPlayable):
    @staticmethod
    def Create(graph: PlayableGraph, material: Material, pass: int = ...) -> MaterialEffectPlayable: ...
    def Equals(self, other: MaterialEffectPlayable) -> bool: ...
    def GetHandle(self) -> PlayableHandle: ...
    def GetMaterial(self) -> Material: ...
    def GetPass(self) -> int: ...
    # Operator not supported op_Explicit(playable: Playable)
    # Operator not supported op_Implicit(playable: MaterialEffectPlayable)
    def SetMaterial(self, value: Material) -> None: ...
    def SetPass(self, value: int) -> None: ...


class TextureMixerPlayable(IEquatable_1[TextureMixerPlayable], IPlayable):
    @staticmethod
    def Create(graph: PlayableGraph) -> TextureMixerPlayable: ...
    def Equals(self, other: TextureMixerPlayable) -> bool: ...
    def GetHandle(self) -> PlayableHandle: ...
    # Operator not supported op_Explicit(playable: Playable)
    # Operator not supported op_Implicit(playable: TextureMixerPlayable)


class TexturePlayableBinding(abc.ABC):
    @staticmethod
    def Create(name: str, key: Object) -> PlayableBinding: ...


class TexturePlayableOutput(IPlayableOutput):
    @classmethod
    @property
    def Null(cls) -> TexturePlayableOutput: ...
    @staticmethod
    def Create(graph: PlayableGraph, name: str, target: RenderTexture) -> TexturePlayableOutput: ...
    def GetHandle(self) -> PlayableOutputHandle: ...
    def GetTarget(self) -> RenderTexture: ...
    # Operator not supported op_Explicit(output: PlayableOutput)
    # Operator not supported op_Implicit(output: TexturePlayableOutput)
    def SetTarget(self, value: RenderTexture) -> None: ...

