import typing, abc
from System import IEquatable_1
from UnityEngine.Playables import IPlayable, PlayableGraph, PlayableHandle
from UnityEngine.Video import VideoClip, VideoPlayer
from UnityEngine.Experimental.Audio import AudioSampleProvider

class VideoClipPlayable(IEquatable_1[VideoClipPlayable], IPlayable):
    @staticmethod
    def Create(graph: PlayableGraph, clip: VideoClip, looping: bool) -> VideoClipPlayable: ...
    def Equals(self, other: VideoClipPlayable) -> bool: ...
    def GetClip(self) -> VideoClip: ...
    def GetHandle(self) -> PlayableHandle: ...
    def GetLooped(self) -> bool: ...
    def GetPauseDelay(self) -> float: ...
    def GetStartDelay(self) -> float: ...
    def IsPlaying(self) -> bool: ...
    # Operator not supported op_Explicit(playable: Playable)
    # Operator not supported op_Implicit(playable: VideoClipPlayable)
    def SetClip(self, value: VideoClip) -> None: ...
    def SetLooped(self, value: bool) -> None: ...
    # Skipped Seek due to it being static, abstract and generic.

    Seek : Seek_MethodGroup
    class Seek_MethodGroup:
        @typing.overload
        def __call__(self, startTime: float, startDelay: float) -> None:...
        @typing.overload
        def __call__(self, startTime: float, startDelay: float, duration: float) -> None:...



class VideoPlayerExtensions(abc.ABC):
    @staticmethod
    def GetAudioSampleProvider(vp: VideoPlayer, trackIndex: int) -> AudioSampleProvider: ...

